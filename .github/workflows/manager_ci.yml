name: Manager CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Set up JDK
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Step 3: Cache Maven dependencies
      - name: Cache Maven dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Step 4: Build the Spring Boot project
      - name: Build with Maven
        run: |
          cd manager
          ./mvnw clean install javadoc:javadoc -B -q -Pall -Dmaven.test.skip

      # Step 5: Run tests
      # - name: Run tests
      #   run: |
      #     cd manager
      #     mvn test

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   if: github.ref == 'refs/heads/main'

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2

  #     - name: Set up JDK
  #       uses: actions/setup-java@v3
  #       with:
  #         java-version: '17'
  #         distribution: 'temurin'

  #     - name: Build the Spring Boot application
  #       run: |
  #         cd manager
  #         mvn clean package -DskipTests

    #   - name: Deploy application
    #     run: |
    #       echo "Deployment steps go here"
    #       # Add deployment commands, e.g., SCP or Docker
